#!/bin/bash

if [ -z $1 ]
then
		echo AVAILABLE STGPOOL:
		echo
		bin/qtsm "select distinct stgpool_name from stgpools"
		echo "ALL STORAGE POOLS"
exit 1
fi

case $1 in
	'ALL' ) STGPOOL=$(bin/qtsm "select distinct stgpool_name from stgpools"| grep -v 'DUMMY\|DIRECTORIES');;
	* ) STGPOOL=$1;;
esac

echo STORAGE POOL STATUSES:
echo

for i in $1; do 
	echo -e "########## Storage pool: $i ##########"
	echo

	NBOFVOLUMES=$(bin/qtsm "select count(*) from volumes where stgpool_name='$STGPOOL'")
	echo "Total volumes in stgpool: " $NBOFVOLUMES 

if [ $NBOFVOLUMES -lt 1 ]
        then
              	echo "No volumes in stgpool"
               	echo 
       		exit 0
	else
	        bin/qtsmb "select STATUS,count(*) from VOLUMES where STGPOOL_NAME='$i' group by STATUS"
fi

PENDING_TODAY=$(bin/qtsm "select count(1) from volumes where STGPOOL_NAME = '$i' and STATUS = 'PENDING' and PENDING_DATE< TIMESTAMP(current timestamp - 48 hours)" | grep -o "[0-9]*")
PENDING_24h=$(bin/qtsm "select count(1) from volumes where STGPOOL_NAME = '$i' and STATUS = 'PENDING' and PENDING_DATE> TIMESTAMP(current timestamp - 48 hours) and PENDING_DATE< TIMESTAMP(current timestamp - 24 hours)" | grep -o "[0-9]*")
PENDING_48h=$(bin/qtsm "select count(1) from volumes where STGPOOL_NAME = '$i' and STATUS = 'PENDING' and PENDING_DATE> TIMESTAMP(current timestamp - 24 hours)" | grep -o "[0-9]*")
echo
[ $PENDING_TODAY -gt "0" ] && echo "$PENDING_TODAY volumes are PENDING and will be freed today"
[ $PENDING_24h -gt "0" ] && echo "$PENDING_24h volumes are to be freed within 24h"
[ $PENDING_48h -gt "0" ] && echo "$PENDING_48h volumes are to be freed within 48h"

echo 
echo Volumes filling percentages:
bin/qtsm "select concat(concat(cast(round(pct_utilized/10)*10-5 as varchar(3)),'% to '),concat(cast(round(pct_utilized/10)*10+5 as varchar(3)),'%')) as tranche,count(*) from volumes where stgpool_name='$STGPOOL' and status not in ('EMPTY','PENDING') group by concat(concat(cast(round(pct_utilized/10)*10-5 as varchar(3)),'% to '),concat(cast(round(pct_utilized/10)*10+5 as varchar(3)),'%')) order by avg(pct_utilized)"
echo

	REUSEDELAY=$(bin/qtsmb "select REUSEDELAY from STGPOOLS where STGPOOL_NAME = '$1'")
	
	if [ ${REUSEDELAY} -ne 2 ]
		then
			echo "WARNING!!! REUSEDELAY parameter is set to ${REUSEDELAY} instead of 2"
			echo "If this is unattended, quickly set it back to 2"
			echo
		else
			echo "REUSEDELAY for $i is set to: ${REUSEDELAY}"
			echo
	fi
done
